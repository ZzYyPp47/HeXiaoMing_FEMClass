% Convert natural finite nodes index to matrix Tb (Quadratic Only)
function Tb = f_index_to_qua_Tb(flatten_eX,flatten_eY,Nfy,Ny)
f = @(x,y) Nfy * (x - 1) + y;% Convert natural finite nodes index to 1D index
g = @(x) 1 + 2 * (x - 1);% Convert natural mesh x nodes index to local finite x index (左下角),y的一样，因此省略
to_T = @(x,y) [(x - 1) * 2 * Ny + 2 * y - 1,(x - 1) * 2 * Ny + 2 * y;...
               f(g(x),g(y)),f(g(x),g(y) + 2);...
               f(g(x) + 2,g(y)),f(g(x) + 2,g(y));...
               f(g(x),g(y) + 2),f(g(x) + 2,g(y) + 2);...
               f(g(x) + 1,g(y)),f(g(x) + 1,g(y) + 1);...
               f(g(x) + 1,g(y) + 1),f(g(x) + 2,g(y) + 1);...
               f(g(x),g(y) + 1),f(g(x) + 1,g(y) + 2)];% natural elements indeg(x) -> 1D elements indeg(x) & natural finite nodes indeg(x) -> 1D finite nodes indeg(x)
Tb = to_T(flatten_eX,flatten_eY);
Tb(:,Tb(1,:)) = Tb(:,sort(Tb(1,:)));% 按照自然顺序
Tb = Tb(2:end,:);% 抹去第一列
end